--- #YAML:1.0 !perl/VCS::Lite::Element
author: ivor
contents:
  - " #!/usr/local/bin/perl\n"
  - " \n"
  - " use strict;\n"
  - " use warnings;\n"
  - " \n"
  - " use Getopt::Long;\n"
  - " \n"
  - " my $output;\n"
  - " \n"
  - " GetOptions(\n"
  - " \t'output=s' => \\$output,\n"
  - " \t);\n"
  - " \n"
  - " if (!@ARGV) {\n"
  - " \tprint <<END;\n"
  - " \n"
  - |2
     Usage:  vlpatch.pl [--output outfile] original patch
  - |2
     	vlpatch [--output outfile] original	# take patch from stdin
  - " \n"
  - |2
     if --output is not specified, the patched file is put in place of
  - |2
     the original, and the original is renamed to *.orig
  - " \n"
  - " END\n"
  - " \texit;\n"
  - " }\n"
  - " \n"
  - " my $orig = shift @ARGV;\n"
  - |2
     my ($pat,$patsrc) = @ARGV ? ($ARGV[0],$ARGV[0]) : (\*STDIN,'-');
  - " my $el1 = VCS::Lite->new($orig);\n"
  - |2
     my $dt1 = VCS::Lite::Delta->new($patsrc,undef,$orig,$pat);
  - " \n"
  - |2
     my $chg = $el1->patch($dt1) or die "Patch failed";
  - " \n"
  - " if (!$output) {\n"
  - " \trename $orig \"$orig.orig\";\n"
  - " \t$output = $orig;\n"
  - " }\n"
  - " \n"
  - |2
     open PAT,">$output" or die "Failed to write output, $!";
  - " print PAT $chg->text;\n"
  - " close PAT;\n"
  - " \n"
latest: {}
path: >-
  /home/ivor/dev/VCS/Lite/Repository/VCS-Lite-Repository-0.07/example/scripts/vlpatch.pl
store: VCS::Lite::Store::YAML
updated: 2004-10-16T20:28:35
